{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard.service.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/datatable/datatable.component.css","webpack:///./src/app/datatable/datatable.component.html","webpack:///./src/app/datatable/datatable.component.ts","webpack:///./src/app/editserver/editserver.component.css","webpack:///./src/app/editserver/editserver.component.html","webpack:///./src/app/editserver/editserver.component.ts","webpack:///./src/app/loader/loader.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/model/ServerGroup.model.ts","webpack:///./src/app/model/UserInGroup.model.ts","webpack:///./src/app/searchassign/searchassign.component.css","webpack:///./src/app/searchassign/searchassign.component.html","webpack:///./src/app/searchassign/searchassign.component.ts","webpack:///./src/app/serverform/serverform.component.css","webpack:///./src/app/serverform/serverform.component.html","webpack:///./src/app/serverform/serverform.component.ts","webpack:///./src/app/sidenav/sidenav.component.css","webpack:///./src/app/sidenav/sidenav.component.html","webpack:///./src/app/sidenav/sidenav.component.ts","webpack:///./src/app/userassignedit/userassignedit.component.css","webpack:///./src/app/userassignedit/userassignedit.component.html","webpack:///./src/app/userassignedit/userassignedit.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { DatatableComponent } from './datatable/datatable.component';\nimport { SearchassignComponent } from './searchassign/searchassign.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ServerformComponent } from './serverform/serverform.component';\nimport { UserassigneditComponent } from './userassignedit/userassignedit.component';\nimport { EditserverComponent } from './editserver/editserver.component';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: DatatableComponent\n    },\n\n    {\n        path: 'server-list',\n        component: DatatableComponent\n    },\n    {\n        path: 'dashboard-portal',\n        component: DashboardComponent\n    }, {\n        path: 'edit-server-list',\n        component: EditserverComponent\n    },\n\n    {\n        path: 'op',\n        component: ServerformComponent\n    },\n    {\n        path: 'assign-server',\n        component: SearchassignComponent\n    },\n    {\n        path: 'edit-group-name',\n        component: UserassigneditComponent\n    },\n    {\n        path: 'login',\n        component: LoginComponent\n    }\n\n\n];\n\n@NgModule( {\n    imports: [RouterModule.forRoot( routes, { useHash: true } )],\n    exports: [RouterModule]\n} )\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"\\r\\n\\r\\n<app-sidenav></app-sidenav>\\r\\n\"","import { Component } from '@angular/core';\nimport {SlimLoadingBarService} from 'ng2-slim-loading-bar';\nimport { NavigationCancel,\n        Event,\n        NavigationEnd,\n        NavigationError,\n        NavigationStart,\n        Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  constructor(private _loadingBar: SlimLoadingBarService, private _router: Router) {\n    this._router.events.subscribe((event: Event) => {\n      this.navigationInterceptor(event);\n    });\n  }\n  private navigationInterceptor(event: Event): void {\n    if (event instanceof NavigationStart) {\n      this._loadingBar.start();\n    }\n    if (event instanceof NavigationEnd) {\n      this._loadingBar.complete();\n    }\n    if (event instanceof NavigationCancel) {\n      this._loadingBar.stop();\n    }\n    if (event instanceof NavigationError) {\n      this._loadingBar.stop();\n    }\n  }\n\n}","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {DashboardService} from './dashboard.service';\nimport {AppComponent} from './app.component';\nimport {AppRoutingModule} from './/app-routing.module';\nimport {DashboardComponent} from './dashboard/dashboard.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {RouterModule} from '@angular/router';\nimport {SlimLoadingBarModule} from 'ng2-slim-loading-bar';\nimport {ServerformComponent} from './serverform/serverform.component';\nimport {FormsModule} from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {SidenavComponent} from './sidenav/sidenav.component';\nimport {LayoutModule} from '@angular/cdk/layout';\nimport {\n  MatToolbarModule, MatButtonModule, MatSidenavModule,\n  MatIconModule, MatListModule, MatGridListModule, MatCardModule, MatMenuModule,\n  MatTableModule, MatPaginatorModule, MatSortModule,MatExpansionModule,MatFormFieldModule,MatTooltipModule\n} from '@angular/material';\nimport {DatatableComponent} from './datatable/datatable.component';\nimport { SearchassignComponent } from './searchassign/searchassign.component';\nimport { UserassigneditComponent } from './userassignedit/userassignedit.component';\nimport { EditserverComponent } from './editserver/editserver.component';\nimport { LoginComponent } from './login/login.component';\nimport { LoaderComponent } from './loader/loader.component';\nimport {DialogModule} from 'primeng/dialog';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    ServerformComponent,\n    SidenavComponent,\n    DatatableComponent,\n    SearchassignComponent,\n    UserassigneditComponent,\n    EditserverComponent,\n    LoginComponent,\n    LoaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    SlimLoadingBarModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatTooltipModule,\n    DialogModule\n  ],\n  providers: [DashboardService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","\nimport { catchError, map } from 'rxjs/operators';\nimport { ServerGroup } from './model/ServerGroup.model';\nimport { UserInGroup } from './model/UserInGroup.model';\nimport { Services } from './model/Services.model';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { RequestOptions, Request, RequestMethod } from '@angular/http';\n\n\nconst httpOptions = {\n    headers: new HttpHeaders( {\n        'Content-Type': 'application/json'\n    } )\n\n};\n\n@Injectable( {\n    providedIn: 'root'\n} )\nexport class DashboardService {\n\n\n    constructor( private _http: HttpClient ) { }\n\n    private dashboardUrl = 'http://localhost:8080/dashboard-portal';\n\n\n    private userInGroup = new UserInGroup();\n    private serverGroup = new ServerGroup();\n\n    getServicesList( sg: ServerGroup ) {\n       // return this._http.get( './getServicesList/' + sg, httpOptions ).pipe(\n       //     map(( response: Response ) => response ), catchError( this.errorHandler ), );\n        //return this._http.get( './getServicesList/'+sg , httpOptions).pipe( map( result => result ) );\n        return this._http.get( './services', httpOptions).pipe( map( result => result ) );\n    }\n\n    getServersList() {\n        return this._http.get( './getServers', httpOptions ).pipe(\n            map(( response: Response ) => response ), catchError( this.errorHandler ), );\n    }\n\n    getServers() {\n        return this._http.get( './serverlist/axm283', httpOptions ).pipe(\n            map(( response: Response ) => response ), catchError( this.errorHandler ), );\n    }\n\n    getServer( serverId: String ) {\n        return this._http.get( './server/' + serverId ).pipe( map(( response: Response ) => response ),\n            catchError( this.errorHandler ), );\n    }\n\n    deleteServer( sg: ServerGroup ) {\n        return this._http.post( './deleteserver/', sg ).pipe( map(( response: Response ) => response ),\n            catchError( this.errorHandler ), );\n    }\n    \n    \n    startService( ser ) {\n        return this._http.post( './startservice', ser ).pipe( map(( response: Response ) => response ),\n            catchError( this.errorHandler ), );\n    }\n    \n    /*stopService( ser: Services ) {\n        return this._http.post( 'http://localhost:8090/stopservice', ser ).pipe( map(( response: Response ) => response ),\n            catchError( this.errorHandler ), );\n    }*/\n\n    stopService( ser ) {\n        return this._http.post( './stopservice', ser ).pipe( map(( response: Response ) => response ),\n            catchError( this.errorHandler ), );\n    }\n\n\n    createServer( sg: ServerGroup ) {\n        return this._http.post( './addserver/', sg ).pipe( map(( response: Response ) => response ),\n            catchError( this.errorHandler ), );\n    }\n\n    updateServer( sg: ServerGroup ) {\n        return this._http.put( './updateserver/', sg ).pipe( map(( response: Response ) => response ),\n            catchError( this.errorHandler ), );\n    }\n\n    errorHandler( error: Response ) {\n        return throwError( error || 'SERVER ERROR' );\n    }\n\n    setterUserInGroup( userinGroup: UserInGroup ) {\n        this.userInGroup = userinGroup;\n    }\n\n    getterUserInGroup() {\n        return this.userInGroup;\n    }\n\n    setterServerGroup( sg: ServerGroup ) {\n        this.serverGroup = sg;\n    }\n\n\n    getterServerGroup() {\n        return this.serverGroup;\n    }\n\n    deleteByUserIdAndGroupName( uig: UserInGroup ) {\n\n        return this._http.post( './deleteuseridgroupname/', uig ).pipe( map(( response: Response ) => response ),\n            catchError( this.errorHandler ), );\n    }\n\n    createUserInGroup( uig: UserInGroup ) {\n        return this._http.post( './adduseringroup/', uig ).pipe( map(( response: Response ) => response ),\n            catchError( this.errorHandler ), );\n    }\n\n    updateUserInGroup( uig: UserInGroup ) {\n        return this._http.put( './updateuseringroup/', uig ).pipe( map(( response: Response ) => response ),\n            catchError( this.errorHandler ), );\n    }\n\n\n    displayDiskUsage( server ) {\n        return this._http.get( './diskstatus/' ).pipe( map( result => result ) );\n    }\n\n    displayCpuUsage( server ) {\n        return this._http.get( './cpustatus' ).pipe( map( result => result ) );\n    }\n\n    displayAvailibility( server ) {\n        return this._http.get( './assets/js/test-data/server_A_serveruptime.json' ).pipe( map( result => result ) );\n    }\n\n\n    getAllUserIds() {\n        return this._http.get( './userIds', httpOptions ).pipe(\n            map(( response: Response ) => response ), catchError( this.errorHandler ), );\n    }\n\n    search( q: string ): Observable<any> {\n        if ( !q || q === '*' ) {\n            q = '';\n        } else {\n            q = q.toLowerCase();\n        }\n\n        return this.getAllUserIds().pipe( map(( data: any ) => data\n            .map( item => !!localStorage['userInGroup' + item.userId] ?\n                JSON.parse( localStorage['userInGroup' + item.userId] ) : item )\n            .filter( item => JSON.stringify( item ).toLowerCase().includes( q ) )\n        ) );\n    }\n\n    get( userId: string ) {\n        return this.getAllUserIds().pipe( map(( all: any ) => {\n            if ( localStorage['userInGroup' + userId] ) {\n                return JSON.parse( localStorage['userInGroup' + userId] );\n            }\n            return all.find( e => e.userId === userId );\n        } ) );\n    }\n\n    save( userInGroup: UserInGroup ) {\n        localStorage['userInGroup' + userInGroup.userId] = JSON.stringify( userInGroup );;\n    }\n\n\n}\n\n\n\n","module.exports = \"\\r\\ntable {\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<gcs-loader *ngIf=\\\"isLoading\\\"></gcs-loader>\\n<mat-grid-list cols=\\\"3\\\" rowHeight=\\\"270px\\\"> <mat-card-content\\n\\tclass=\\\"dashboard-card-content\\\">\\n\\n<div class=\\\"row\\\">\\n\\t<div class=\\\"col-md-4\\\">\\n\\t\\t<div class=\\\"card card-chart\\\">\\n\\t\\t\\t<div class=\\\"card-header card-header-success\\\">\\n\\t\\t\\t\\t<div class=\\\"ct-chart\\\">\\n\\t\\t\\t\\t\\t<canvas id=\\\"diskUsage-chart\\\"></canvas>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t\\t<h4 class=\\\"card-title\\\">{{this.dashBoardData.serverId}} disk\\n\\t\\t\\t\\t\\tusage</h4>\\n\\t\\t\\t\\t<p class=\\\"card-category\\\"></p>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\\\"col-md-4\\\">\\n\\t\\t<div class=\\\"card card-chart\\\">\\n\\t\\t\\t<div class=\\\"card-header card-header-info\\\">\\n\\t\\t\\t\\t<div class=\\\"ct-chart\\\">\\n\\t\\t\\t\\t\\t<canvas id=\\\"availability-chart\\\"></canvas>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t\\t<h4 class=\\\"card-title\\\">{{this.dashBoardData.serverId}}\\n\\t\\t\\t\\t\\tavailability</h4>\\n\\t\\t\\t\\t<p class=\\\"card-category\\\"></p>\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\\\"col-md-4\\\">\\n\\t\\t<div class=\\\"card card-chart\\\">\\n\\t\\t\\t<div class=\\\"card-header card-header-warning\\\">\\n\\t\\t\\t\\t<div class=\\\"ct-chart\\\">\\n\\t\\t\\t\\t\\t<canvas id=\\\"cpuUsage-chart\\\"></canvas>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t\\t<h4 class=\\\"card-title\\\">{{this.dashBoardData.serverId}} cpu\\n\\t\\t\\t\\t\\tusage</h4>\\n\\t\\t\\t\\t<p class=\\\"card-category\\\"></p>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\n\\n</div>\\n</mat-card-content></mat-grid-list>\\n\\n<mat-grid-list cols=\\\"2\\\" rowHeight=\\\"10px\\\"> <mat-card-content\\tclass=\\\"dashboard-card-content\\\">\\n\\n<div class=\\\"row\\\">\\n\\n\\t<div class=\\\"col-lg-6 col-md-12\\\">\\n\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t<div class=\\\"card-header card-header-success\\\">\\n\\t\\t\\t\\t<h6 class=\\\"card-title \\\">\\n\\t\\t\\t\\t\\tServices Running<i class=\\\"material-icons\\\">event_available</i>\\n\\t\\t\\t\\t</h6>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div>\\n\\t\\t\\t\\t<mat-accordion> <mat-expansion-panel>\\n\\t\\t\\t\\t<mat-expansion-panel-header> <mat-panel-title>\\n\\t\\t\\t\\tShow Services </mat-panel-title> </mat-expansion-panel-header>\\n\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t<table mat-table #table [dataSource]=\\\"runningServicesData\\\"\\n\\t\\t\\t\\t\\t\\taria-label=\\\"Elements\\\">\\n\\n\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"position\\\">\\n\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef>No.</th>\\n\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let element; let i = index;\\\">{{i+1}}</td>\\n\\t\\t\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"ServiceName\\\">\\n\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef>Service Name</th>\\n\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let Services\\\">{{Services.servicename}}</td>\\n\\t\\t\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"Status\\\">\\n\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef>Status</th>\\n\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let Services\\\">{{Services.status}}</td>\\n\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"Details\\\">\\n\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef>Details</th>\\n\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let Services\\\">{{Services.details}}</td>\\n\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"ServiceType\\\">\\n\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef>Service Type</th>\\n\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let Services\\\">{{Services.servicetype}}</td>\\n\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"ServerType\\\">\\n\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef>Server Type</th>\\n\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let Services\\\">{{Services.servertype}}</td>\\n\\t\\t\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"StopService\\\">\\n\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef>Stop Service</th>\\n\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let Services\\\">\\n\\t\\t\\t\\t\\t\\t\\t<button mat-raised-button\\n\\t\\t\\t\\t\\t\\t\\t\\tmatTooltip=\\\"Stop {{Services.servicename}}\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[matTooltipPosition]=\\\"'above'\\\" class=\\\"btn btn-danger btn-sm\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"showPopup(Services , 'stop')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tStop <i class=\\\"material-icons\\\">not_interested</i>\\n\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t\\t<tr mat-header-row\\n\\t\\t\\t\\t\\t\\t\\t*matHeaderRowDef=\\\"displayRunningServicesColumns\\\"></tr>\\n\\t\\t\\t\\t\\t\\t<tr mat-row\\n\\t\\t\\t\\t\\t\\t\\t*matRowDef=\\\"let Services; columns: displayRunningServicesColumns;\\\"></tr>\\n\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</mat-expansion-panel> </mat-accordion>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=\\\"col-lg-6 col-md-12\\\">\\n\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t<div class=\\\"card-header card-header-danger\\\">\\n\\t\\t\\t\\t<h6 class=\\\"card-title \\\">\\n\\t\\t\\t\\t\\tServices Stopped <i class=\\\"material-icons\\\">warning</i>\\n\\t\\t\\t\\t</h6>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div>\\n\\t\\t\\t\\t<mat-accordion> <mat-expansion-panel>\\n\\t\\t\\t\\t<mat-expansion-panel-header> <mat-panel-title>\\n\\t\\t\\t\\tShow Services </mat-panel-title> </mat-expansion-panel-header>\\n\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t<table mat-table #table [dataSource]=\\\"stoppedServicesData\\\"\\n\\t\\t\\t\\t\\t\\taria-label=\\\"Elements\\\">\\n\\n\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"position\\\">\\n\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef>No.</th>\\n\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let element; let i = index;\\\">{{i+1}}</td>\\n\\t\\t\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"ServiceName\\\">\\n\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef>Service Name</th>\\n\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let Services\\\">{{Services.servicename}}</td>\\n\\t\\t\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"Status\\\">\\n\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef>Status</th>\\n\\t\\t\\t\\t\\t\\t<!--<td mat-cell *matCellDef=\\\"let ServerGroup\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t <a\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trouterLink=\\\"/dashboard-portal/{{ServerGroup.serverId}}\\\">{{ServerGroup.serverId}}</a></td> -->\\n\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let Services\\\">{{Services.status}}</td>\\n\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"Details\\\">\\n\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef>Details</th>\\n\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let Services\\\">{{Services.details}}</td>\\n\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"ServiceType\\\">\\n\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef>Service Type</th>\\n\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let Services\\\">{{Services.servicetype}}</td>\\n\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"ServerType\\\">\\n\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef>Server Type</th>\\n\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let Services\\\">{{Services.servertype}}</td>\\n\\t\\t\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"StartService\\\">\\n\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef>Start Service</th>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let Services\\\">\\n\\t\\t\\t\\t\\t\\t<div [ngStyle]=\\\"{'width': value + '%'}\\\" class=\\\"bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<button mat-raised-button\\n\\t\\t\\t\\t\\t\\t\\t\\tmatTooltip=\\\"Start {{Services.servicename}}\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[matTooltipPosition]=\\\"'above'\\\" class=\\\"btn btn-success btn-sm\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"showPopup(Services, 'start')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tStart <i class=\\\"material-icons\\\">play_circle_filled</i>\\n\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<tr mat-header-row\\n\\t\\t\\t\\t\\t\\t\\t*matHeaderRowDef=\\\"displayStoppedServicesColumns\\\"></tr>\\n\\t\\t\\t\\t\\t\\t<tr mat-row\\n\\t\\t\\t\\t\\t\\t\\t*matRowDef=\\\"let ServerGroup; columns: displayStoppedServicesColumns;\\\"></tr>\\n\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</mat-expansion-panel> </mat-accordion>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<p-dialog header=\\\"Info\\\" [(visible)]=\\\"displaystopdialog\\\" [modal]=\\\"true\\\" [responsive]=\\\"true\\\" [width]=\\\"350\\\" [minWidth]=\\\"200\\\" [minY]=\\\"70\\\" \\n         [baseZIndex]=\\\"10000\\\">\\n    \\t<span>Do you want to proceed ?</span>\\n        <p-footer>\\n            <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"stopService()\\\" label=\\\"Yes\\\" class=\\\"ui-primarybtn\\\">Yes</button>\\n            <button type=\\\"button\\\" pButton icon=\\\"pi pi-close\\\" (click)=\\\"displaystopdialog = !displaystopdialog\\\" label=\\\"No\\\" class=\\\"ui-button-secondary\\\">No</button>\\n        </p-footer>\\n\\t</p-dialog>\\n\\n\\t<p-dialog header=\\\"Info\\\" [(visible)]=\\\"displaystartdialog\\\" [modal]=\\\"true\\\" [responsive]=\\\"true\\\" [width]=\\\"350\\\" [minWidth]=\\\"200\\\" [minY]=\\\"70\\\" \\n         [baseZIndex]=\\\"10000\\\">\\n    \\t<span>Do you want to proceed ?</span>\\n        <p-footer>\\n            <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"startService()\\\" label=\\\"Yes\\\" class=\\\"ui-primarybtn\\\">Yes</button>\\n            <button type=\\\"button\\\" pButton icon=\\\"pi pi-close\\\" (click)=\\\"displaystartdialog = !displaystartdialog\\\" label=\\\"No\\\" class=\\\"ui-button-secondary\\\">No</button>\\n        </p-footer>\\n\\t</p-dialog>\\n\\n\\n</div>\\n\\n</mat-card-content> </mat-grid-list>\\n\\n\\n\\n<!-- \\n\\t<div class=\\\"row\\\">\\n\\t\\t<mat-grid-list cols=\\\"2\\\" rowHeight=\\\"350px\\\"> \\t<mat-card class=\\\"dashboard-card\\\"> <mat-card-content\\n\\t\\t\\tclass=\\\"dashboard-card-content\\\">\\n\\n\\t\\t<div class=\\\"col-md-4\\\" width=\\\"200\\\" height=\\\"200\\\">\\n\\t\\t\\t<canvas id=\\\"diskUsage-chart\\\"></canvas>\\n\\t\\t</div>\\n\\n\\t\\t<div class=\\\"col-md-4\\\">\\n\\t\\t\\t<canvas id=\\\"availability-chart\\\"></canvas>\\n\\t\\t</div>\\n\\n\\t\\t<div class=\\\"col-md-4\\\">\\n\\t\\t\\t<canvas id=\\\"cpuUsage-chart\\\"></canvas>\\n\\t\\t</div>\\n\\n\\n\\t\\t</mat-card-content> </mat-card> </mat-grid-list>\\n\\t</div>\\n\\t -->\"","import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointState, BreakpointObserver } from '@angular/cdk/layout';\n\nimport { DashboardService } from '../dashboard.service';\nimport {Observable} from 'rxjs/Rx';\nimport {\n    ActivatedRoute, Event,\n    NavigationCancel,\n    NavigationEnd,\n    NavigationError,\n    NavigationStart,\n    Router\n} from '@angular/router';\nimport { Chart } from 'chart.js';\nimport { ServerGroup } from '../model/ServerGroup.model';\nimport { Services } from '../model/Services.model';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component( {\n    selector: 'app-dashboard',\n    templateUrl: './dashboard.component.html',\n    styleUrls: ['./dashboard.component.css']\n} )\n\n\nexport class DashboardComponent {\n    panelOpenState = false;\n    dashBoardData: ServerGroup;\n    pieDiskUsageChart = [];\n    lineCpuUsageChart = [];\n    lineAvailibilityChart = [];\n    services: Services[];\n    runningServicesData: MatTableDataSource<Services>;\n    stoppedServicesData: MatTableDataSource<Services>;\n    loading = false;\n    //runningServices: Services[];\n    //stoppedServices: Services[];\n    runningServices: any[];\n    stoppedServices: any[];\n    servicesdetails: any[];\n    /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n    displayRunningServicesColumns = ['position', 'ServiceName', 'Status', 'Details', 'ServiceType', 'ServerType', 'StopService'];\n    displayStoppedServicesColumns = ['position', 'ServiceName', 'Status', 'Details', 'ServiceType', 'ServerType', 'StartService'];\n\n    private isLoading: boolean = false;\n    private displaystopdialog: boolean = false;\n    private displaystartdialog: boolean = false;\n    \n    constructor( private breakpointObserver: BreakpointObserver, private route: Router, private data: DashboardService ) {\n        this.route.events.subscribe(( event: Event ) => {\n            switch ( true ) {\n                case event instanceof NavigationStart: {\n                    this.loading = true;\n                    break;\n                }\n\n                case event instanceof NavigationEnd: {\n                    // trick the Router into believing it's last link wasn't previously loaded\n                    this.route.navigated = false;\n                    // if you need to scroll back to top, here is the right place\n                    window.scrollTo( 0, 0 );\n                }\n                case event instanceof NavigationCancel:\n                case event instanceof NavigationError: {\n                    this.loading = false;\n                    break;\n                }\n                default: {\n                    break;\n                }\n            }\n        } );\n    }\n\n    showPopup(servicesdetails,status){\n       if(status == 'start'){\n           this.displaystartdialog = true;\n       } else if(status == 'stop') {\n           this.displaystopdialog = true;\n       }\n       \n       this.servicesdetails = servicesdetails;\n    }\n    \n    startService( ) {\n        this.isLoading = true;\n        this.data.startService( this.servicesdetails ).subscribe(( data ) => {\n            if(data){\n            this.stoppedServices.splice( this.stoppedServices.indexOf( this.servicesdetails ), 1 );\n            this.stoppedServicesData = new MatTableDataSource( this.stoppedServices );\n            this.runningServices.push( this.servicesdetails );\n            this.runningServicesData = new MatTableDataSource( this.runningServices );\n            this.isLoading = false;\n            this.displaystartdialog = false;\n            }\n        }, ( error ) => {\n            console.log( error );\n        } );\n    }\n\n    \n\n    /*stopService(services) { \n        this.isLoading = true;\n        this.data.stopService( services ).subscribe(( data ) => {\n            if(data){\n            this.runningServices.splice( this.runningServices.indexOf( services ), 1 );\n            this.runningServicesData = new MatTableDataSource( this.runningServices );\n            this.stoppedServices.push( services );\n            this.stoppedServicesData = new MatTableDataSource( this.stoppedServices );\n            this.isLoading = false;\n            }\n        }, ( error ) => {\n            console.log( error );\n        } );\n\n    }*/\n\n    stopService() { \n        this.isLoading = true;\n        this.data.stopService( this.servicesdetails ).subscribe(( data ) => {\n            if(data){ \n            this.runningServices.splice( this.runningServices.indexOf( this.servicesdetails ), 1 );\n            this.runningServicesData = new MatTableDataSource( this.runningServices );\n            this.stoppedServices.push( this.servicesdetails );\n            this.stoppedServicesData = new MatTableDataSource( this.stoppedServices );\n            this.isLoading = false;\n            this.displaystopdialog = false;\n            }\n        }, ( error ) => {\n            console.log( error );\n        } );\n\n    }\n\n\n    ngOnInit() {\n\n        this.dashBoardData = this.data.getterServerGroup();\n        this.data.getServicesList( this.dashBoardData ).pipe( map(( data: any ) => data ) ).subscribe(( res ) => {\n            const services: Services[] = res;\n\n            this.runningServices = services.filter( services => services.status === \"running\" )\n            this.runningServicesData = new MatTableDataSource( this.runningServices );\n\n            this.stoppedServices = services.filter( services => services.status === \"stopped\" )\n            this.stoppedServicesData = new MatTableDataSource( this.stoppedServices );\n\n        }, ( error ) => {\n            console.log( error );\n        } );\n\n        this.data.displayAvailibility( this.dashBoardData.serverId ).subscribe( res =>\n            this.lineAvailibilityChart = new Chart( document.getElementById( 'availability-chart' ), {\n                type: 'line',\n                data: res,\n                options: {\n                    /* title: {\n                         display: true,\n                         position: 'bottom',\n                         text: this.dashBoardData.serverId,\n                         fontSize: 15,\n                         fontColor: '#111'\n                     },*/\n                    legend: {\n                        display: true,\n                        position: 'bottom',\n\n                        labels: {\n                            fontColor: '#2F4F4F',\n                            fontSize: 15\n                        }\n                    }\n                }\n\n            }\n            )\n        );\n\n        this.cpuUsage();\n        this.diskUsage();\n\n        Observable.interval(1000 * 60).subscribe(x => {\n            this.cpuUsage();\n            this.diskUsage();\n        });\n\n\n        \n    }\n\n\n    cpuUsage (){\n       this.data.displayCpuUsage( this.dashBoardData.serverId ).subscribe( res =>\n            this.lineCpuUsageChart = new Chart( document.getElementById( 'cpuUsage-chart' ), {\n                type: 'line',\n                data: {\n                    'labels':  res['labels'],\n                    'datasets': [\n                        {\n                            'data': res['data'],\n                            'label': 'Cpu Usage',\n                            'borderColor': 'black',\n                            'pointBorderColor': 'black',\n                            'pointBackgroundColor': \"#80b6f4\",\n                            'pointHoverBackgroundColor': \"#80b6f4\",\n                            'pointHoverBorderColor': \"#80b6f4\",\n                            'pointBorderWidth': 5,\n                            'pointHoverRadius': 5,\n                            'pointHoverBorderWidth': 1,\n                            'pointRadius': 1,\n                            'fill': true,\n                            'borderWidth': 2\n                        }]\n                },\n                options: {\n\n                    /*title: {\n                        display: true,\n                        position: 'bottom',\n                        text: 'CPU Usuage',\n                        fontSize: 15,\n                        fontColor: '#111'\n                    },*/\n\n                    legend: {\n                        display: true,\n                        position: 'bottom',\n                        labels: {\n                            fontColor: '#333',\n                            fontSize: 15\n                        }\n                    }\n                }\n\n            }\n            )\n        );\n   }\n\n\n   diskUsage (){\n       this.data.displayDiskUsage( this.dashBoardData.serverId ).subscribe( res =>\n            this.pieDiskUsageChart = new Chart( document.getElementById( 'diskUsage-chart' ), {\n\n                type: 'pie',\n                data: {\n                    'labels': ['Available', 'Used'],\n\n                    'datasets': [\n                        {\n                            'data': [res['available'], res['used']],\n                            'backgroundColor': [\n                                \"grey\",\n                                \"#c00\"\n                            ],\n                            'borderColor': [\n                                '#E9DAC6',\n                                '#CBCBCB'\n                            ]\n                        }]\n                },\n                options: {\n                    responsive: true,\n                    /*    title: {\n                            display: true,\n                            position: 'bottom',\n                            text: 'Disk Usuage',\n                            fontSize: 15,\n                            fontColor: '#111'\n                        },*/\n                    legend: {\n                        display: true,\n                        position: 'bottom',\n                        labels: {\n                            fontColor: '#333',\n                            fontSize: 15\n                        }\n                    }\n                }\n\n            }\n            )\n        );\n   }\n\n}\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\"","module.exports = \"\\n<ul *ngFor=\\\"let serverGroup of getKeys(serverList)\\\">\\n\\t<div class=\\\"col-md-8\\\">\\n\\t\\t<div class=\\\"card \\\">\\n\\t\\t\\t<div class=\\\"card-header card-header-info\\\">\\n\\t\\t\\t\\t<h6 class=\\\"card-title \\\">Server Group : {{serverGroup}}</h6>\\n\\t\\t\\t\\t<i class=\\\"material-icons\\\">business</i>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div>\\n\\t\\t\\t\\t<mat-accordion> <mat-expansion-panel\\n\\t\\t\\t\\t\\t(opened)=\\\"panelOpenState = true\\\" (closed)=\\\"panelOpenState = false\\\">\\n\\t\\t\\t\\t<mat-expansion-panel-header> <mat-panel-title>\\n\\t\\t\\t\\tShow Servers </mat-panel-title> </mat-expansion-panel-header>\\n\\t\\t\\t\\t<div class=\\\" row card-group\\\">\\n\\t\\t\\t\\t\\t<ul *ngFor=\\\"let server of serverList[serverGroup]\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"card card-stats\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-header card-header-info card-header-icon\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-icon \\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-raised-button class=\\\"card-header-primary \\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"showDashBoard(server)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{server.serverId}} <i class=\\\"material-icons\\\">business</i>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</mat-expansion-panel> </mat-accordion>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</ul>\\n\\n<!-- \\n<ul *ngFor=\\\"let serverGroup of getKeys(serverList)\\\">\\n\\t<div class=\\\"col-md-8\\\">\\n\\t\\t<div class=\\\"card card-stats\\\">\\n\\t\\t\\t<div class=\\\"card-header card-header-info card-header-icon\\\">\\n\\n\\t\\t\\t\\t<ul *ngFor=\\\"let server of serverList[serverGroup]\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"card-icon \\\">\\n\\t\\t\\t\\t\\t\\t<button mat-raised-button class=\\\"card-header-primary\\\"\\n\\t\\t\\t\\t\\t\\t\\t(click)=\\\"showDashBoard(server)\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{server.serverId}} <i class=\\\"material-icons\\\">personal_video</i>\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t</ul>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"card-footer\\\">{{serverGroup}}</div>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\n</ul>\\n\\n -->\"","import { DashboardService } from '../dashboard.service';\nimport { ServerGroup } from '../model/ServerGroup.model';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { DatatableDataSource } from './datatable-datasource';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { from } from 'rxjs/observable/from';\nimport { groupBy, mergeMap, toArray } from 'rxjs/operators';\n\n\n@Component( {\n    selector: 'app-datatable',\n    templateUrl: './datatable.component.html',\n    styleUrls: ['./datatable.component.css']\n} )\nexport class DatatableComponent implements OnInit {\n    @ViewChild( MatPaginator ) paginator: MatPaginator;\n    @ViewChild( MatSort ) sort: MatSort;\n    dataSource: MatTableDataSource<ServerGroup>;\n    private serverList: Map<String, Array<ServerGroup>>;\n    private servers;\n\n    constructor( private dashboardService: DashboardService, private _router: Router ) { }\n\n\n\n    getKeys( map: Map<String, Array<ServerGroup>> ) {\n        return Object.keys( map );\n    }\n\n    ngOnInit() {\n        // this.dataSource = new DatatableDataSource(this.paginator, this.sort);\n\n        this.dashboardService.getServers().pipe( map(( data: any ) => data ) ).subscribe(( res ) => {\n            this.serverList = res;\n\n        }, ( error ) => {\n            console.log( error );\n        } );\n\n    }\n\n    deleteServer( serverGroup ) {\n        this.dashboardService.deleteServer( serverGroup ).subscribe(( data ) => {\n            this.dataSource.data.splice( this.dataSource.data.indexOf( serverGroup ), 1 );\n        }, ( error ) => {\n            console.log( error );\n        } );\n    }\n\n    showDashBoard( serverGroup ) {\n        this.dashboardService.setterServerGroup( serverGroup );\n        this._router.navigate( ['/dashboard-portal'] );\n\n\n    }\n\n    newServer() {\n        let serverGroup = new ServerGroup();\n        this.dashboardService.setterServerGroup( serverGroup );\n        this._router.navigate( ['/op'] );\n\n    }\n\n}\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\"","module.exports = \"<div class=\\\"content\\\">\\n\\t<div class=\\\"container-fluid\\\">\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"col-md-12\\\">\\n\\t\\t\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"card-header card-header-primary\\\">\\n\\t\\t\\t\\t\\t\\t<h4 class=\\\"card-title \\\">Server Details</h4>\\n\\t\\t\\t\\t\\t\\t<p class=\\\"card-category\\\"></p>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"table-responsive\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t<table mat-table #table [dataSource]=\\\"dataSource\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\taria-label=\\\"Elements\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"position\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef>No.</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let element; let i = index;\\\">{{i+1}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"GroupName\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef>GroupName</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let ServerGroup\\\">{{ServerGroup.groupName}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"ServerId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef>ServerId</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t<!--<td mat-cell *matCellDef=\\\"let ServerGroup\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t <a\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trouterLink=\\\"/dashboard-portal/{{ServerGroup.serverId}}\\\">{{ServerGroup.serverId}}</a></td> -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let ServerGroup\\\">{{ServerGroup.serverId}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\n\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"ServerName\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef>ServerName</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let ServerGroup\\\">{{ServerGroup.servername}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\n\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"ServiceName\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef>ServiceName</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let ServerGroup\\\">{{ServerGroup.servicename}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"ServerType\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef>ServerType</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let ServerGroup\\\">{{ServerGroup.servertype}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\n\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"IP\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef>ServerIP</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let ServerGroup\\\">{{ServerGroup.ip}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\n\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"Port\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef>Port</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let ServerGroup\\\">{{ServerGroup.port}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"Edit\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef>Edit Server Details</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let ServerGroup\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-raised-button color=\\\"primary\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"updateServer(ServerGroup)\\\">Edit</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"Delete\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef>Delete Server Details</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let ServerGroup\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-raised-button color=\\\"warn\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"deleteServer(ServerGroup)\\\">Delete</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<tr mat-row\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t*matRowDef=\\\"let ServerGroup; columns: displayedColumns;\\\"></tr>\\n\\n\\t\\t\\t\\t\\t\\t\\t</table>\\n\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t<table>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-raised-button color=\\\"primary\\\" (click)=\\\"newServer()\\\">Add\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tServer Details</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"","import { DashboardService } from '../dashboard.service';\nimport { ServerGroup } from '../model/ServerGroup.model';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { from } from 'rxjs/observable/from';\nimport { groupBy, mergeMap, toArray } from 'rxjs/operators';\n\n\n@Component( {\n    selector: 'app-datatable',\n    templateUrl: './editserver.component.html',\n    styleUrls: ['./editserver.component.css']\n} )\nexport class EditserverComponent implements OnInit {\n    @ViewChild( MatPaginator ) paginator: MatPaginator;\n    @ViewChild( MatSort ) sort: MatSort;\n    dataSource: MatTableDataSource<ServerGroup>;\n    private serverList: Map<String, Array<ServerGroup>>;\n    private servers:ServerGroup[];\n\n    constructor( private dashboardService: DashboardService, private _router: Router ) { }\n\n    /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n    displayedColumns = ['position', 'GroupName', 'ServerId', 'ServerName', 'ServiceName', 'ServerType', 'IP', 'Port'\n        , 'Edit', 'Delete'];\n\n\n    ngOnInit() {\n        // this.dataSource = new DatatableDataSource(this.paginator, this.sort);\n\n        this.dashboardService.getServersList().pipe( map(( data: any ) => data ) ).subscribe(( res ) => {\n            this.servers =  res;\n            this.dataSource = new MatTableDataSource( res );\n\n        }, ( error ) => {\n            console.log( error );\n        } );\n\n    }\n\n    deleteServer( serverGroup ) {\n        this.dashboardService.deleteServer( serverGroup ).subscribe(( data ) => {\n            this.servers.splice( this.servers.indexOf( serverGroup ), 1 );\n            this.dataSource = new MatTableDataSource( this.servers );\n        }, ( error ) => {\n            console.log( error );\n        } );\n    }\n\n    updateServer( serverGroup ) {\n        this.dashboardService.setterServerGroup( serverGroup );\n        this._router.navigate( ['/op'] );\n\n    }\n\n    newServer() {\n        let serverGroup = new ServerGroup();\n        this.dashboardService.setterServerGroup( serverGroup );\n        this._router.navigate( ['/op'] );\n\n    }\n\n}\n\n"," \r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gcs-loader',\r\n  template: `\r\n      <div class=\"bg-loader\">\r\n        <div class=\"loader\" id=\"loader\"></div>\r\n      </div>\r\n  `\r\n})\r\nexport class LoaderComponent {\r\n\r\n  constructor() { }\r\n}\r\n","module.exports = \"\"","module.exports = \" <!-- Login Modal -->\\n    <div class=\\\"modal fade\\\" id=\\\"loginModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n        <div class=\\\"modal-dialog modal-login\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"card card-signup card-plain\\\">\\n                    <div class=\\\"modal-header\\\">\\n                        <div class=\\\"card-header card-header-primary text-center\\\">\\n                            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\"><i class=\\\"material-icons\\\">clear</i></button>\\n                            <h4 class=\\\"card-title\\\">Log in</h4>\\n                            \\n                        </div>\\n                    </div>\\n\\t\\t\\t\\t\\t<div class=\\\"modal-body\\\">\\n                        <form class=\\\"form\\\" method=\\\"\\\" action=\\\"\\\">\\n                              <div class=\\\"card-body\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <div class=\\\"input-group\\\">\\n                                        <div class=\\\"input-group-prepend\\\">\\n                                            <span class=\\\"input-group-text\\\">\\n                                                <i class=\\\"material-icons\\\">face</i>\\n                                            </span>\\n                                        </div>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"User Name...\\\">\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <div class=\\\"input-group\\\">\\n                                        <div class=\\\"input-group-prepend\\\">\\n                                            <span class=\\\"input-group-text\\\">\\n                                                <i class=\\\"material-icons\\\">lock_outline</i>\\n                                            </span>\\n                                        </div>\\n                                        <input type=\\\"password\\\" placeholder=\\\"LDAP Password...\\\" class=\\\"form-control\\\" />\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </form>\\n                    </div>\\n                    <div class=\\\"modal-footer justify-content-center\\\">\\n                        <a href=\\\"#pablo\\\" class=\\\"btn btn-primary btn-link btn-wd btn-lg\\\">Get Started</a>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n    constructor(public router: Router) {}\n\n  ngOnInit() {\n  }\n\n}\n","export class ServerGroup {\r\n    groupName: string;\r\n    serverId: string;\r\n    serverName: string;\r\n    serviceName: string;\r\n    ip: string;\r\n    serverType: string;\r\n    port: string;\r\n}\r\n","export class UserInGroup {\r\n  id: number;\r\n  userId: string;\r\n  groupName: string;\r\n\r\n}\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\"","module.exports = \"\\n<h3>Search User</h3>\\n<form>\\n\\t<input type=\\\"search\\\" name=\\\"query\\\" [(ngModel)]=\\\"query\\\"\\n\\t\\t(keyup.enter)=\\\"search()\\\">\\n\\t<button  mat-raised-button class=\\\"btn btn-info\\\" (click)=\\\"search()\\\">Search <i class=\\\"material-icons\\\">search</i></button>\\n</form>\\n\\n<div>\\n\\t<table>\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" (click)=\\\"assignNewGroup()\\\">Assign\\n\\t\\t\\tNew Group </button>\\n\\t</table>\\n</div>\\n\\n\\n\\n<table class=\\\"table table-striped\\\" *ngIf=\\\"searchResults\\\">\\n\\t<div class=\\\"content\\\">\\n\\t\\t<div class=\\\"container-fluid\\\">\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t<div class=\\\"col-md-10\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"card-header card-header-primary\\\">\\n\\t\\t\\t\\t\\t\\t\\t<h5 class=\\\"card-title \\\">Edit Group</h5>\\n\\t\\t\\t\\t\\t\\t\\t<p class=\\\"card-category\\\"></p>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t\\t\\t<th>User Id</th>\\n\\t\\t\\t\\t\\t\\t\\t<th>Group Name</th>\\n\\t\\t\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let userInGroup of searchResults\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<td>{{userInGroup.userId}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td>{{userInGroup.groupName}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t<button mat-raised-button color=\\\"primary\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"updateGroupName(userInGroup)\\\">Edit</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td>\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-raised-button color=\\\"warn\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"deleteByUserIdAndGroupName(userInGroup)\\\">Delete</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\n\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\n\\n\\n</table>\\n\\n\\n\\n\\n\\n\"","import {DashboardService} from '../dashboard.service';\nimport {UserInGroup} from '../model/UserInGroup.model';\nimport {Component, OnInit, OnDestroy} from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'app-searchassign',\n  templateUrl: './searchassign.component.html',\n  styleUrls: ['./searchassign.component.css']\n})\nexport class SearchassignComponent implements OnInit, OnDestroy {\n  query: string;\n  searchResults: Array<UserInGroup>;\n  sub: Subscription;\n  private userInGroupList: UserInGroup[];\n\n  constructor(private dashboardService: DashboardService, private route: ActivatedRoute, private _router: Router) {}\n\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(params => {\n      if (params['term']) {\n        this.query = decodeURIComponent(params['term']);\n        this.search();\n      }\n    });\n  }\n\n  search(): void {\n    if (this.query != null && this.query.trim != undefined) {\n      this.dashboardService.search(this.query).subscribe(\n        (data: any) => {this.searchResults = data;},\n        error => console.log(error)\n      );\n    } else {\n      this.searchResults = new Array<UserInGroup>();\n    }\n\n  }\n\n  deleteByUserIdAndGroupName(userInGroup) {\n    this.dashboardService.deleteByUserIdAndGroupName(userInGroup).subscribe((data) => {\n      this.searchResults.splice(this.searchResults.indexOf(userInGroup), 1);\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  updateGroupName(userInGroup) {\n    this.dashboardService.setterUserInGroup(userInGroup);\n    this._router.navigate(['/edit-group-name']);\n\n  }\n\n  assignNewGroup() {\n    let userInGroup = new UserInGroup();\n    this.dashboardService.setterUserInGroup(userInGroup);\n    this._router.navigate(['/edit-group-name']);\n\n  }\n\n  ngOnDestroy() {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n}","module.exports = \"\"","module.exports = \"<div class=\\\"content\\\">\\n\\t<div class=\\\"container-fluid\\\">\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"col-md-10\\\">\\n\\t\\t\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"card-header card-header-primary\\\">\\n\\t\\t\\t\\t\\t\\t<h4 class=\\\"card-title \\\">Update Server Details</h4>\\n\\t\\t\\t\\t\\t\\t<p class=\\\"card-category\\\"></p>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"table-responsive\\\">\\n\\t\\t\\t\\t\\t\\t\\t<form (ngSubmit)=\\\"processForm()\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"groupName\\\">GroupName</label> <input matInput\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"text\\\" name=\\\"groupName\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"serverGroup.groupName\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"serverId\\\">ServerId</label> <input matInput\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"text\\\" name=\\\"serverId\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"serverGroup.serverId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"serverName\\\">Server Name</label> <input matInput\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"text\\\" name=\\\"serverName\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"serverGroup.servername\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"serviceName\\\">Service Name</label> <input matInput\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"text\\\" name=\\\"serviceName\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"serverGroup.servicename\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"ip\\\">IP</label> <input matInput type=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"ip\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"serverGroup.ip\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"port\\\">Port</label> <input matInput type=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"port\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"serverGroup.port\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"servertype\\\">Server Type</label> <input matInput\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"text\\\" name=\\\"servertype\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"serverGroup.servertype\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"submit\\\" value=\\\"save\\\" class=\\\"btn btn-success\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ServerGroup} from '../model/ServerGroup.model';\nimport {Router} from '@angular/router';\nimport {DashboardService} from '../dashboard.service';\n\n@Component({\n  selector: 'app-serverform',\n  templateUrl: './serverform.component.html',\n  styleUrls: ['./serverform.component.css']\n})\nexport class ServerformComponent implements OnInit {\n\n  private serverGroup: ServerGroup;\n\n  constructor(private dashboardServer: DashboardService, private _rotuer: Router) {}\n\n  ngOnInit() {\n\n    this.serverGroup = this.dashboardServer.getterServerGroup();\n  }\n\n  processForm() {\n    if (this.serverGroup.serverId === undefined) {\n      this.dashboardServer.createServer(this.serverGroup).subscribe((response) => {\n        console.log(response);\n        this._rotuer.navigate(['/']); \n      }, (error) => {\n        console.log(error);\n      });\n    } else {\n      this.dashboardServer.updateServer(this.serverGroup).subscribe((response) => {\n        console.log(response);\n        this._rotuer.navigate(['/']);\n      }, (error) => {\n        console.log(error);\n      });\n    }\n  }\n\n}\n","module.exports = \".sidenav-container {\\n  height: 100%;\\n}\\n\\n.sidenav {\\n  width: 200px;\\n}\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n}\\n\\n\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav\\n    #drawer\\n    class=\\\"sidenav\\\"\\n    fixedInViewport=\\\"true\\\"\\n    [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n    [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n    [opened]=\\\"!(isHandset$ | async)\\\">\\n    <mat-toolbar ></mat-toolbar>\\n    <mat-nav-list>\\n      <a mat-list-item routerLink=\\\"/assign-server\\\">Assign Server</a>\\n      <a mat-list-item routerLink=\\\"/server-list\\\">Server List</a>\\n      <a mat-list-item routerLink=\\\"/edit-server-list\\\">Edit Server List</a>\\n      <a mat-list-item routerLink=\\\"/signout\\\">SignOut</a>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar >\\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\"\\n        *ngIf=\\\"isHandset$ | async\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n      <span>Dashboard</span>\\n    </mat-toolbar>\\n    <!-- Add Content Here -->\\n    <router-outlet></router-outlet>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.css']\n})\nexport class SidenavComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n    \n  constructor(private breakpointObserver: BreakpointObserver) {}\n  \n  }\n","module.exports = \"\"","module.exports = \"<div class=\\\"content\\\">\\n\\t<div class=\\\"container-fluid\\\">\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"col-md-12\\\">\\n\\t\\t\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"card-header card-header-primary\\\">\\n\\t\\t\\t\\t\\t\\t<h4 class=\\\"card-title \\\">Server Details</h4>\\n\\t\\t\\t\\t\\t\\t<p class=\\\"card-category\\\"></p>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"table-responsive\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t<form (ngSubmit)=\\\"processForm()\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"userId\\\">UserId</label> <input matInput type=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"userId\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"userInGroup.userId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"groupName\\\">GroupName</label> <input matInput\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"text\\\" name=\\\"groupName\\\" class=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"userInGroup.groupName\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"submit\\\" value=\\\"save\\\" class=\\\"btn btn-success\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t</form>\\n\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\"","import {DashboardService} from '../dashboard.service';\nimport {UserInGroup} from '../model/UserInGroup.model';\nimport {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-userassignedit',\n  templateUrl: './userassignedit.component.html',\n  styleUrls: ['./userassignedit.component.css']\n})\nexport class UserassigneditComponent implements OnInit {\n\n  private userInGroup: UserInGroup;\n\n  constructor(private dashboardServer: DashboardService, private _rotuer: Router) {}\n\n  ngOnInit() {\n\n    this.userInGroup = this.dashboardServer.getterUserInGroup();\n  }\n\n  processForm() {\n    if (this.userInGroup.userId === undefined) {\n      this.dashboardServer.createUserInGroup(this.userInGroup).subscribe((response) => {\n        console.log(response);\n        this._rotuer.navigate(['/assign-server']);\n      }, (error) => {\n        console.log(error);\n      });\n    } else {\n      this.dashboardServer.updateUserInGroup(this.userInGroup).subscribe((response) => {\n        console.log(response);\n        this._rotuer.navigate(['/assign-server']);\n      }, (error) => {\n        console.log(error);\n      });\n    }\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}